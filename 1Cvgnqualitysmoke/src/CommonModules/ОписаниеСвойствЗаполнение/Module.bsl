// Вызывается из ФормаЭлемента ОписаниеИзменений и обработки ЗагрузкаСравненияКонфигураций.
// Параметры:
//  НовСпр - СправочникОбъект - элемент справочника, в котором заполняем табличную часть.
//
Функция ЗаполнитьЗначенияСвойствТЧОписаниеСвойств(НовСпр) Экспорт
	
	КэшКоличестваПробелов = Новый Соответствие;
	
	СтруктураКодов = Новый Соответствие;
	СтруктураКодов.Вставить("***", Перечисления.ТипыИзменений.ОбъектИзменен);
	СтруктураКодов.Вставить("-->", Перечисления.ТипыИзменений.ОбъектПрисутствуетТолькоВОсновнойКонфигурации);
	СтруктураКодов.Вставить("<--", Перечисления.ТипыИзменений.ОбъектПрисутствуетТолькоВКонфигурацииПоставщика); 
	
	ТЧОписаниеСвойств = НовСпр.ОписаниеСвойств;
	ТЧОписаниеСвойств.Очистить();
	ЭтоОписание = Ложь;
	СтрокаОписание = "";
	
	ОбрабатываемаяСтрока = НовСпр.Описание;
	
	Если ОбрабатываемаяСтрока = "" Тогда
		Возврат НовСпр;
	КонецЕсли;
	
	КоличествоСтрок = СтрЧислоСтрок(ОбрабатываемаяСтрока);
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		Стр = СтрПолучитьСтроку(ОбрабатываемаяСтрока, НомерСтроки);
		КоличествоЛидирующихПробелов = ВернутьКоличествоЛидирующихПробелов(Стр, КэшКоличестваПробелов); 
		
		Если КоличествоЛидирующихПробелов = 3 Тогда // это новое Свойство
			СтрокаОписание = "";
			ЭтоОписание = Ложь;
			НовСтр = ТЧОписаниеСвойств.Добавить();
			Стр = Прав(Стр, СтрДлина(Стр) - КоличествоЛидирующихПробелов);
			Массив = СтрРазделить(Стр, "-");
			Если Массив.Количество() = 3 Тогда
				Стр = СокрЛП(Массив[1]);
				СтрокаОписание = СокрЛП(СтрЗаменить(Массив[2], "- ", ""));
				ЭтоОписание = Истина;
			КонецЕсли;
			Для каждого Код_ Из СтруктураКодов Цикл
				Если НЕ СтрНайти (Стр,Код_.Ключ) = 0 Тогда
					НовСтр.ТипИзменения = Код_.Значение;
					Стр = СтрЗаменить(Стр, Код_.Ключ ,"");
				Прервать;
				КонецЕсли;
			КонецЦикла;
			Стр = СокрЛП(СтрЗаменить(Стр, "- ", ""));
			НовСтр.СвойствоМетаданных = Стр;
			НовСтр.Описание = СтрокаОписание;
		Иначе
			Если НЕ НовСтр = НЕОПРЕДЕЛЕНО Тогда	
				ПервоеТиреВСтроке = Найти(Стр, "-");
					
				Если НЕ ЭтоОписание И ПервоеТиреВСтроке > 0 Тогда
					Стр = СокрЛП(Прав(Стр,СтрДлина(Стр) - ПервоеТиреВСтроке));
				Иначе
					Если ЭтоОписание ИЛИ НовСпр.Расширение Тогда
						Стр = Прав(Стр, СтрДлина(Стр) - 4);
					Иначе
						Стр = Прав(Стр, СтрДлина(Стр) - 3);
					КонецЕсли;
				КонецЕсли;
					СтрокаОписание = СтрокаОписание + ?(ПустаяСтрока(СтрокаОписание),"",Символы.ПС) + Стр;
					НовСтр.Описание = СтрокаОписание;
					ЭтоОписание = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат НовСпр;

КонецФункции


Функция ВернутьКоличествоЛидирующихПробелов(Стр, КэшКоличестваПробелов) Экспорт
	
	ЗначениеКэш = КэшКоличестваПробелов.Получить(Стр);
	
	Если НЕ ЗначениеКэш = Неопределено Тогда
		Возврат ЗначениеКэш;
	КонецЕсли;
	
	КоличествоПробелов = 0; 
	Позиция = 1;
	
	Пока Позиция < СтрДлина(Стр) И  Сред(Стр, Позиция, 1) = Символы.Таб Цикл
		КоличествоПробелов = КоличествоПробелов + 1;		
		Позиция = Позиция + 1;
	КонецЦикла; 
	
	КэшКоличестваПробелов.Вставить(Стр, КоличествоПробелов);
	
	Возврат КоличествоПробелов;
	
КонецФункции