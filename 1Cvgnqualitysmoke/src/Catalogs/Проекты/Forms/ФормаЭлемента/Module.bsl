	 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименяемоеТестированиеПриАктивизацииСтроки(Элемент)   
	
	ТекДанные =  Элементы.ПрименяемоеТестирование.ТекущиеДанные;
	
	Если НЕ ТекДанные = Неопределено Тогда
		
		НовЭлементОтбораВидТестирования.ПравоеЗначение = ТекДанные.ВидТестирования; 	
		
	КонецЕсли;
	 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)  
	
	ЭлементОтбораПроект = ИнформацияОРеализацииТестирования.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораПроект.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект"); 
	ЭлементОтбораПроект.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораПроект.Использование = Истина;
	ЭлементОтбораПроект.ПравоеЗначение = Объект.Ссылка; 
	
	НовЭлементОтбораВидТестирования = ИнформацияОРеализацииТестирования.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовЭлементОтбораВидТестирования.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидТестирования"); 
	НовЭлементОтбораВидТестирования.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовЭлементОтбораВидТестирования.Использование = Истина;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьСпособВыполненияЭтапа(ВидТестирования, Проект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыТестированияЭтапыТестирования.ЭтапТестирования КАК ЭтапТестирования,
	|	ВидыТестированияЭтапыТестирования.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ЭтапыТестирования
	|ИЗ
	|	Справочник.ВидыТестирования.ЭтапыТестирования КАК ВидыТестированияЭтапыТестирования
	|ГДЕ
	|	ВидыТестированияЭтапыТестирования.Ссылка = &ВидТестирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацияЭтапаТестирования.Ссылка КАК Ссылка,
	|	РегистрацияЭтапаТестирования.Проект КАК Проект,
	|	РегистрацияЭтапаТестирования.ВидТестирования КАК ВидТестирования,
	|	РегистрацияЭтапаТестирования.ЭтапТестирования КАК ЭтапТестирования
	|ПОМЕСТИТЬ ДокументыПоВидуТестированияПроекту
	|ИЗ
	|	Документ.РегистрацияЭтапаТестирования КАК РегистрацияЭтапаТестирования
	|ГДЕ
	|	РегистрацияЭтапаТестирования.Проект = &Проект
	|	И РегистрацияЭтапаТестирования.ВидТестирования = &ВидТестирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапыТестирования.ЭтапТестирования КАК ЭтапТестирования,
	|	ДокументыПоВидуТестированияПроекту.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументыПоВидуТестированияПроекту.Ссылка ЕСТЬ NULL
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК НаличиеДокумента,
	|	ЭтапыТестирования.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ДанныеДокументов
	|ИЗ
	|	ЭтапыТестирования КАК ЭтапыТестирования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоВидуТестированияПроекту КАК ДокументыПоВидуТестированияПроекту
	|		ПО ЭтапыТестирования.ЭтапТестирования = ДокументыПоВидуТестированияПроекту.ЭтапТестирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.ЭтапТестирования КАК ЭтапТестирования,
	|	ДанныеДокументов.Ссылка КАК Документ,
	|	ДанныеДокументов.НаличиеДокумента КАК НаличиеДокумента,
	|	ВидыТестированияНастройкиПрограммныхПродуктов.НастройкаПрограммныхПродуктов.ОбработкаФормированияНастроек КАК ОбработкаФормированияНастроек,
	|	ДанныеДокументов.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыТестирования.НастройкиПрограммныхПродуктов КАК ВидыТестированияНастройкиПрограммныхПродуктов
	|		ПО ДанныеДокументов.ЭтапТестирования = ВидыТестированияНастройкиПрограммныхПродуктов.ЭтапТестирования
	|			И ДанныеДокументов.ЭтапТестирования.Владелец = ВидыТестированияНастройкиПрограммныхПродуктов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ВидТестирования", ВидТестирования );
	Запрос.УстановитьПараметр("Проект", Проект );
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если  НЕ ЗначениеЗаполнено(Выборка.Документ) Тогда
			Возврат Новый Структура("ЭтапТестирования, ОбработкаФормированияНастроек", Выборка.ЭтапТестирования, Выборка.ОбработкаФормированияНастроек );	
		КонецЕсли;
	КонецЦикла; 
	
	Возврат Новый Структура("ЭтапТестирования, ОбработкаФормированияНастроек", Выборка.ЭтапТестирования, Выборка.ОбработкаФормированияНастроек );
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьЭтап(Команда)  
	
	ТекДанные = Элементы.ПрименяемоеТестирование.ТекущиеДанные;
	Если НЕ ТекДанные = НЕопределено Тогда   
		СтрДанных =  ОпределитьСпособВыполненияЭтапа(ТекДанные.ВидТестирования, Объект.Ссылка);
		//Если ЗначениеЗаполнено(СтрДанных.ОбработкаФормированияНастроек) Тогда // открываем настройку 
		//	
		//	ВыполняемаяКоманда = Новый Структура(
		//	"Ссылка, Представление,
		//	|Идентификатор, ВариантЗапуска, ПоказыватьОповещение, 
		//	|Модификатор, ОбъектыНазначения, ЭтоОтчет, Вид" ,СтрДанных.ОбработкаФормированияНастроек,,,,,,,Ложь );
		//	ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьОткрытиеФормыОбработки(ВыполняемаяКоманда, ЭтотОбъект, Неопределено);
		//	
		//Иначе   // Открываем новый документ
			Данные = Новый Структура("Проект, ВидТестирования, ЭтапТестирования, ДополнительнаяОбработка ", Объект.Ссылка, ТекДанные.ВидТестирования, СтрДанных.ЭтапТестирования, СтрДанных.ОбработкаФормированияНастроек);
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Данные);
			ОткрытьФорму("Документ.РегистрацияЭтапаТестирования.ФормаОбъекта", ПараметрыФормы);
		//КонецЕсли; 		
	КонецЕсли;
	
КонецПроцедуры
