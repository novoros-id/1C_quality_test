
&НаСервереБезКонтекста
Процедура ЗагрузитьНаСервере(АдресСравненияФайлов, Организация, КонфигурацияИсточник, КонфигурацияПриемник, ПодсистемаРодитель) 
	
	// Выгрузка данных
	
	ФайлПриемник = ПолучитьИмяВременногоФайла("txt");
	ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресСравненияФайлов);
	ДанныеХранилища.Записать(ФайлПриемник);  
		
	КэшКоличестваПробелов = Новый Соответствие;
	
	Текст = Новый ЧтениеТекста(ФайлПриемник);  
	
	Стр = Текст.ПрочитатьСтроку();
	
	СтрТекущегоОбъектаМетаданных =  Неопределено; 

	СтрокаИзменений = "";
	ЗаписаныСвойства = Ложь;
	КоличествоИзменений = 0;
	ШапкаФайла = Истина;
	СтрокаОписание = "";
	ЭтоОписание = Ложь;
	
	Пока Стр <> Неопределено Цикл 
		
		Стр = Текст.ПрочитатьСтроку();
		
		Если не СтрНайти(Стр,"- Подсистемы",,,) = 0 Тогда 
			ТекущийСправочникПодсистемы = ВернутьСправочникПодсистемы(Стр, Организация, КонфигурацияИсточник, КонфигурацияПриемник, Истина, ПодсистемаРодитель); 
		Иначе 
			Если НЕ ТекущийСправочникПодсистемы = Неопределено Тогда
				ЭлементИзменение = ВернутьЭлементИзменение(Стр, Организация, КонфигурацияИсточник, КонфигурацияПриемник, ТекущийСправочникПодсистемы); 
				Если НЕ ЭлементИзменение = Неопределено Тогда  
					//Сообщить("" + ЭлементИзменение + " -------- " + ТекущийСправочникПодсистемы);
					Если НЕ ЭлементИзменение.ЕстьЭлемент Тогда
					
						 СроОбъект = ЭлементИзменение.ссылка.ПолучитьОбъект();
						 НовСтрСО = СроОбъект.СвязанныеОбъекты.Добавить();
						 НовСтрСО.СвязанныйОбъект = ТекущийСправочникПодсистемы;
						 СроОбъект.Записать();
					     КоличествоИзменений = КоличествоИзменений + 1;
						 
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;   
				
	КонецЦикла;
	
	Если НЕ СтруктураПустая(СтрТекущегоОбъектаМетаданных) Тогда
		//СоздатьОписаниеИзменений(НаименованиеРасширения, СтрТекущегоОбъектаМетаданных, СтрокаИзменений, Организация, КонфигурацияИсточник, КонфигурацияПриемник);
		//КоличествоИзменений = КоличествоИзменений + 1;
	КонецЕсли;
	
	Сообщить("Обработано " + КоличествоИзменений + " изменений!");
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ВернутьЭлементИзменение(Стр, Организация, КонфигурацияИсточник, КонфигурацияПриемник, ТекущийСправочникПодсистемы) 
	
	СтрПодготовленная = СтрЗаменить(Стр,"""","");
	МассивЭл = СтрРазделить(СтрПодготовленная, ".");  
	
	Если МассивЭл.Количество()<2 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОписаниеИзменений.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	Справочник.ОписаниеИзменений КАК ОписаниеИзменений
	               |ГДЕ
	               |	ОписаниеИзменений.ГруппаМетаданных = &ГруппаМетаданных
	               |	И ОписаниеИзменений.Метаданные = &Метаданные
	               |	И ОписаниеИзменений.Организация = &Организация
	               |	И ОписаниеИзменений.КонфигурацияИсточник = &КонфигурацияИсточник
	               |	И ОписаниеИзменений.КонфигурацияПриемник = &КонфигурацияПриемник
	               |	И НЕ ОписаниеИзменений.Расширение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Данные.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ЕстьСвязанныйЭлемент
	               |ИЗ
	               |	Данные КАК Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОписаниеИзменений.СвязанныеОбъекты КАК ОписаниеИзмененийСвязанныеОбъекты
	               |		ПО Данные.Ссылка = ОписаниеИзмененийСвязанныеОбъекты.Ссылка
	               |ГДЕ
	               |	ОписаниеИзмененийСвязанныеОбъекты.СвязанныйОбъект = &СвязанныйОбъект
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Данные.Ссылка КАК Ссылка,
	               |	ВЫБОР
	               |		КОГДА ЕстьСвязанныйЭлемент.Ссылка ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЕстьЭлемент
	               |ИЗ
	               |	Данные КАК Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьСвязанныйЭлемент КАК ЕстьСвязанныйЭлемент
	               |		ПО Данные.Ссылка = ЕстьСвязанныйЭлемент.Ссылка";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КонфигурацияИсточник", КонфигурацияИсточник);
	Запрос.УстановитьПараметр("КонфигурацияПриемник", КонфигурацияПриемник);
	Запрос.УстановитьПараметр("ГруппаМетаданных", СокрЛП(МассивЭл[0]));
	Запрос.УстановитьПараметр("Метаданные", МассивЭл[1]);
    Запрос.УстановитьПараметр("СвязанныйОбъект", ТекущийСправочникПодсистемы);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
	    Возврат Неопределено;
	ИначеЕсли Результат.Количество() > 1 Тогда 
		Сообщить("Найдено более двух изменеений " + Стр);
		Возврат Неопределено;
	Иначе    
		Возврат Новый Структура("Ссылка, ЕстьЭлемент", Результат[0].Ссылка, Результат[0].ЕстьЭлемент);
	КонецЕсли;
	
	
		
КонецФункции // ВернутьСправочникПодсистемы() 


&НаСервереБезКонтекста
Функция ВернутьСправочникПодсистемы(Стр, Организация, КонфигурацияИсточник, КонфигурацияПриемник, СоздаватьЭлемент = Истина, ПодсистемаРодитель)
	
	СтрПодготовленная = СтрЗаменить(Стр, "- ", "");
	МассивПодсистемы = СтрРазделить(СтрПодготовленная, ".");
	
	КоличествоЭлементов = МассивПодсистемы.Количество();
	ПорядковыйНомерРодителя = ?(КоличествоЭлементов >= 4, КоличествоЭлементов - 3, Неопределено);
	ИмяРодителя =  ?(ПорядковыйНомерРодителя = Неопределено, "", МассивПодсистемы[ПорядковыйНомерРодителя]);
	
	//ПорядковыйНомерРодителяРодителя = ?(КоличествоЭлементов >= 6, КоличествоЭлементов - 5, Неопределено);
	//ИмяРодителяРодителя=  ?(ПорядковыйНомерРодителяРодителя = Неопределено, "", МассивПодсистемы[ПорядковыйНомерРодителяРодителя]);
	
	ИмяПодсистемы =  МассивПодсистемы[КоличествоЭлементов-1];  
	
	//Сообщить("" + ИмяРодителя + " " + ИмяПодсистемы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Подсистемы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Подсистемы КАК Подсистемы
	               |ГДЕ
	               |	Подсистемы.Организация = &Организация
	               |	И Подсистемы.КонфигурацияИсточник = &КонфигурацияИсточник
	               |	И Подсистемы.КонфигурацияПриемник = &КонфигурацияПриемник
	               |	И Подсистемы.ПолноеНаименование = &ПолноеНаименование";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПолноеНаименование", СокрЛП(Стр));
	Запрос.УстановитьПараметр("КонфигурацияИсточник", КонфигурацияИсточник);
	Запрос.УстановитьПараметр("КонфигурацияПриемник", КонфигурацияПриемник);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 1 Тогда
		Сообщить("Найдено более двух элементов " , Стр);
		Возврат Неопределено;
	ИначеЕсли Результат.Количество() = 1 Тогда
		Возврат  Результат[0].Ссылка;
	Иначе  
		Если СоздаватьЭлемент Тогда
			
			РодительЭлемента  = ?(ИмяРодителя = "",ПодсистемаРодитель, ВернутьРодительЭлемента(Стр, Организация, КонфигурацияИсточник, КонфигурацияПриемник, ПодсистемаРодитель));
			
			Если  НЕ РодительЭлемента  = Неопределено Тогда
				
				НовЭлемент = Справочники.Подсистемы.СоздатьЭлемент();
				НовЭлемент.Наименование =  ИмяПодсистемы;
				НовЭлемент.Организация = Организация;   
				НовЭлемент.ПолноеНаименование = СокрЛП(Стр);
				НовЭлемент.КонфигурацияИсточник = КонфигурацияИсточник;
				НовЭлемент.КонфигурацияПриемник = КонфигурацияПриемник; 
				НовЭлемент.Родитель = РодительЭлемента;
				НовЭлемент.Записать(); 
				
			Иначе
				
				Сообщить("Родитель не найден " + Стр);
				Возврат Неопределено;
				
			КонецЕсли;
			
		Иначе
			
			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецФункции // ВернутьСправочникПодсистемы() 

&НаСервереБезКонтекста 
Функция ВернутьРодительЭлемента(Стр, Организация, КонфигурацияИсточник, КонфигурацияПриемник, ПодсистемаРодитель)
	
	СтрРодителя = "";
	МассивРодителя = СтрРазделить(Стр, ".");  
	
	Счетчик = 0;
	Для каждого Строка Из МассивРодителя Цикл  
		
		Если Счетчик = 0 Тогда 
			СтрРодителя = Строка;
		ИначеЕсли Счетчик =  МассивРодителя.Количество() - 2 Тогда 
			Возврат  ВернутьСправочникПодсистемы(СокрЛП(СтрРодителя), Организация, КонфигурацияИсточник, КонфигурацияПриемник, Ложь, ПодсистемаРодитель);
		Иначе
			СтрРодителя = СтрРодителя + "." + Строка;
		КонецЕсли;
		
		
		Счетчик = Счетчик + 1;
	КонецЦикла;
	

КонецФункции // ВернутьРодительЭлемента()

&НаСервереБезКонтекста
Процедура СоздатьОписаниеИзменений(НаименованиеРасширения, СтрТекущегоОбъектаМетаданных, СтрокаИзменений, Организация, КонфигурацияИсточник, КонфигурацияПриемник)
	
	НовСпр = Справочники.ОписаниеИзменений.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НовСпр, СтрТекущегоОбъектаМетаданных);
	НовСпр.ДатаЗагрузки = ТекущаяДатаСеанса();
	НовСпр.Организация =  Организация;
	НовСпр.КонфигурацияИсточник = КонфигурацияИсточник;
	НовСпр.КонфигурацияПриемник = КонфигурацияПриемник; 
	НовСпр.Расширение = Истина;	
	НовСпр.Описание = СтрокаИзменений;
	НовСпр.Наименование =  "Расширение " + НаименованиеРасширения 
							+ " - " +  СтрТекущегоОбъектаМетаданных.Метаданные;
	//НовСпр.Записать();
	//ОписаниеСвойствЗаполнение.ЗаполнитьЗначенияСвойствТЧОписаниеСвойств(НовСпр); // заполнение ТЧ ОписаниеСвойств
	СтрокаИзменений = "";
	НовСпр.Записать();
КонецПроцедуры
  
&НаСервереБезКонтекста
Функция СтруктураПустая(СтрТекущегоОбъектаМетаданных)
	Если СтрТекущегоОбъектаМетаданных = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	Для Каждого Стр Из СтрТекущегоОбъектаМетаданных Цикл
		Если ТипЗнч(Стр) = Тип("Структура") Тогда
			Если НЕ СтруктураПустая(Стр) Тогда
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Стр.Значение) Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат Истина;
КонецФункции

//&НаСервереБезКонтекста
//Функция ПолучитьГруппуМетаданныхЕдЧ(ГруппаМетаданныхМнЧ)
//	
//		ГруппаМетаданныхЕдЧ = ГруппаМетаданныхМнЧ;
//		
//		Если ГруппаМетаданныхМнЧ = "WebСервисы" Тогда
//			ГруппаМетаданныхЕдЧ = "WebСервис";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ГруппыКоманд" Тогда
//			ГруппаМетаданныхЕдЧ = "ГруппаКоманд";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Документы" Тогда
//			ГруппаМетаданныхЕдЧ = "Документ";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ЖурналыДокументов" Тогда
//			ГруппаМетаданныхЕдЧ = "ЖурналДокументов";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Константы" Тогда
//			ГруппаМетаданныхЕдЧ = "Константа";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Обработки" Тогда
//			ГруппаМетаданныхЕдЧ = "Обработка";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеКартинки" Тогда
//			ГруппаМетаданныхЕдЧ = "ОбщаяКартинка";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеКоманды" Тогда
//			ГруппаМетаданныхЕдЧ = "ОбщаяКоманда";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеМакеты" Тогда
//			ГруппаМетаданныхЕдЧ = "ОбщийМакет";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеМодули" Тогда
//			ГруппаМетаданныхЕдЧ = "ОбщийМодуль";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеФормы" Тогда
//			ГруппаМетаданныхЕдЧ = "ОбщаяФорма";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ОпределяемыеТипы" Тогда
//			ГруппаМетаданныхЕдЧ = "ОпределяемыйТип";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Отчеты" Тогда
//			ГруппаМетаданныхЕдЧ = "Отчет";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ПараметрыСеанса" Тогда
//			ГруппаМетаданныхЕдЧ = "ПараметрСеанса";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ПараметрыФункциональныхОпций" Тогда
//			ГруппаМетаданныхЕдЧ = "ПараметрФункциональныхОпций"; 
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Перечисления" Тогда
//			ГруппаМетаданныхЕдЧ = "Перечисление";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ПланыВидовХарактеристик" Тогда
//			ГруппаМетаданныхЕдЧ = "ПланВидовХарактеристик";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ПланыОбмена" Тогда
//			ГруппаМетаданныхЕдЧ = "ПланОбмена";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ПланыСчетов" Тогда
//			ГруппаМетаданныхЕдЧ = "ПланСчетов";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ПодпискиНаСобытия" Тогда
//			ГруппаМетаданныхЕдЧ = "ПодпискаНаСобытие";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Подсистемы" Тогда
//			ГруппаМетаданныхЕдЧ = "Подсистема";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "РегистрыБухгалтерии" Тогда
//			ГруппаМетаданныхЕдЧ = "РегистрБухгалтерии";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "РегистрыНакопления" Тогда
//			ГруппаМетаданныхЕдЧ = "РегистрНакопления";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "РегистрыСведений" Тогда
//			ГруппаМетаданныхЕдЧ = "РегистрСведений";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Роли" Тогда
//			ГруппаМетаданныхЕдЧ = "Роль";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Справочники" Тогда
//			ГруппаМетаданныхЕдЧ = "Справочник";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ФункциональныеОпции" Тогда
//			ГруппаМетаданныхЕдЧ = "ФункциональнаяОпция";  
//		ИначеЕсли ГруппаМетаданныхМнЧ = "ЭлементыСтиля" Тогда
//			ГруппаМетаданныхЕдЧ = "ЭлементСтиля";
//		ИначеЕсли ГруппаМетаданныхМнЧ = "Языки" Тогда
//			ГруппаМетаданныхЕдЧ = "Язык";
//		КонецЕсли;	 
//		
//Возврат ГруппаМетаданныхЕдЧ;

//КонецФункции

&НаКлиенте
Процедура Загрузить(Команда)
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ПутьКФайлу) Тогда 
		АдресСравненияФайлов = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу));
		ЗагрузитьНаСервере(АдресСравненияФайлов, Организация, КонфигурацияИсточник, КонфигурацияПриемник, ПодсистемаРодитель);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытия.Каталог = ПутьКФайлу;
	ДиалогОткрытия.Заголовок = "Укажите файл сравнения"; 
	
	Параметр = "";
	Оповещение = Новый ОписаниеОповещения("ВыборВнешнегоФайла_Завершение", ЭтаФорма, Параметр );
	ДиалогОткрытия.Показать(Оповещение); 

КонецПроцедуры

&НаКлиенте
Процедура ВыборВнешнегоФайла_Завершение(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		ПутьКФайлу = Результат[0];
	КонецЕсли;
	
КонецПроцедуры

