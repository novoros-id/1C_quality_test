
&НаСервереБезКонтекста
Процедура ЗагрузитьНаСервере(АдресСравненияФайлов, Организация, КонфигурацияИсточник, КонфигурацияПриемник) 
	
	// Выгрузка данных
	
	ФайлПриемник = ПолучитьИмяВременногоФайла("txt");
	ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресСравненияФайлов);
	ДанныеХранилища.Записать(ФайлПриемник);  
		
	КэшКоличестваПробелов = Новый Соответствие;
	
	Текст = Новый ЧтениеТекста(ФайлПриемник);  
	
	Стр = Текст.ПрочитатьСтроку();
	
	СтрТекущегоОбъектаМетаданных =  Неопределено; 

	СтрокаИзменений = "";
	ЗаписаныСвойства = Ложь;
	КоличествоИзменений = 0;
	ШапкаФайла = Истина;
	СтрокаОписание = "";
	ЭтоОписание = Ложь;
	НаименованиеРасширения = "";
	
	Пока Стр <> Неопределено Цикл 
		
		Стр = Текст.ПрочитатьСтроку();
		
		Если НаименованиеРасширения = "" И СтрНачинаетсяС(Стр,"		Имя: ") Тогда 
			НаименованиеРасширения = СтрЗаменить(Стр,"		Имя: ","");		
		КонецЕсли; 
		
		КоличествоЛидирующихПробелов = ОписаниеСвойствЗаполнение.ВернутьКоличествоЛидирующихПробелов(Стр, КэшКоличестваПробелов); 
		
		Если КоличествоЛидирующихПробелов = 2 И СтрНачинаетсяС(СокрЛ(Стр),"-") Тогда // это новый объектМетаданных  
			
			//Если НЕ СтрТекущегоОбъектаМетаданных = Неопределено Тогда
			ШапкаФайла = Ложь;
			//КонецЕсли;  
			
			Если НЕ СтруктураПустая(СтрТекущегоОбъектаМетаданных) Тогда
				СоздатьОписаниеИзменений(НаименованиеРасширения, СтрТекущегоОбъектаМетаданных, СтрокаИзменений, Организация, КонфигурацияИсточник, КонфигурацияПриемник);
				КоличествоИзменений = КоличествоИзменений + 1;
			КонецЕсли;
			СтрТекущегоОбъектаМетаданных = ПолучитьСтруктуруТекущегоОбъектаМетаданных(Стр);
		Продолжить;
			
		КонецЕсли; 
		
		Если НЕ ШапкаФайла Тогда
			СтрокаИзменений = СтрокаИзменений  + ?(ПустаяСтрока(СтрокаИзменений),"",Символы.ПС) + Стр;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ СтруктураПустая(СтрТекущегоОбъектаМетаданных) Тогда
		СоздатьОписаниеИзменений(НаименованиеРасширения, СтрТекущегоОбъектаМетаданных, СтрокаИзменений, Организация, КонфигурацияИсточник, КонфигурацияПриемник);
		КоличествоИзменений = КоличествоИзменений + 1;
	КонецЕсли;
	
	Сообщить("Обработано " + КоличествоИзменений + " изменений!");
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура СоздатьОписаниеИзменений(НаименованиеРасширения, СтрТекущегоОбъектаМетаданных, СтрокаИзменений, Организация, КонфигурацияИсточник, КонфигурацияПриемник)
	
	НовСпр = Справочники.ОписаниеИзменений.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НовСпр, СтрТекущегоОбъектаМетаданных);
	НовСпр.ДатаЗагрузки = ТекущаяДатаСеанса(); 
	НовСпр.НаименованиеРасширения = НаименованиеРасширения;
	НовСпр.Организация =  Организация;
	НовСпр.КонфигурацияИсточник = КонфигурацияИсточник;
	НовСпр.КонфигурацияПриемник = КонфигурацияПриемник; 
	НовСпр.Расширение = Истина;	
	НовСпр.Описание = СтрокаИзменений;
	НовСпр.Наименование =  "Расширение " + НаименованиеРасширения 
							+ " - " +  СтрТекущегоОбъектаМетаданных.Метаданные;
	//НовСпр.Записать();
	//ОписаниеСвойствЗаполнение.ЗаполнитьЗначенияСвойствТЧОписаниеСвойств(НовСпр); // заполнение ТЧ ОписаниеСвойств
	СтрокаИзменений = "";
	НовСпр.Записать();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруТекущегоОбъектаМетаданных(Стр)
	
	СтруктураОбъекта =  Новый Структура("ТипИзменения, ГруппаМетаданных, Метаданные, СвойствоМетаданных, ЗначениеСвойствМетаданных");
	
	Стр = Прав(Стр, СтрДлина(Стр) - 2);
	Если НЕ СтрНайти (Стр,"-") = 0 Тогда
		СтруктураОбъекта.Вставить("ТипИзменения", Перечисления.ТипыИзменений.ОбъектПрисутствуетТолькоВОсновнойКонфигурации);
		Стр = СтрЗаменить(Стр, "-" ,"");
	КонецЕсли;
	
	Стр = СтрЗаменить(Стр, "-", "");
	Массив = СтрРазделить(Стр, ".");
	
	Если Массив.Количество() = 2 Тогда
		СтруктураОбъекта.Вставить("ГруппаМетаданных",ПолучитьГруппуМетаданныхЕдЧ(СокрЛП(Массив[0])));
		СтруктураОбъекта.Вставить("Метаданные", СокрЛП(Массив[1])); 		
	ИначеЕсли  Массив.Количество() = 3 Тогда  
		СтруктураОбъекта.Вставить("ГруппаМетаданных", ПолучитьГруппуМетаданныхЕдЧ(СокрЛП(Массив[0])));
		СтруктураОбъекта.Вставить("Метаданные", СокрЛП(Массив[1])); 	
		СтруктураОбъекта.Вставить("СвойствоМетаданных", СокрЛП(Массив[2])); 
	ИначеЕсли Массив.Количество() = 4 Тогда 
		СтруктураОбъекта.Вставить("ГруппаМетаданных", ПолучитьГруппуМетаданныхЕдЧ(СокрЛП(Массив[0])));
		СтруктураОбъекта.Вставить("Метаданные", СокрЛП(Массив[1])); 	
		СтруктураОбъекта.Вставить("СвойствоМетаданных", СокрЛП(Массив[2]));
		СтруктураОбъекта.Вставить("ЗначениеСвойствМетаданных", СокрЛП(Массив[3])); 
	Иначе
		
		//Сообщить("Ошибка в определении метаданных");
	КонецЕсли;
	
	Возврат СтруктураОбъекта;
	
КонецФункции // ()

&НаСервереБезКонтекста
Функция СтруктураПустая(СтрТекущегоОбъектаМетаданных)
	Если СтрТекущегоОбъектаМетаданных = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	Для Каждого Стр Из СтрТекущегоОбъектаМетаданных Цикл
		Если ТипЗнч(Стр) = Тип("Структура") Тогда
			Если НЕ СтруктураПустая(Стр) Тогда
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Стр.Значение) Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьГруппуМетаданныхЕдЧ(ГруппаМетаданныхМнЧ)
	
		ГруппаМетаданныхЕдЧ = ГруппаМетаданныхМнЧ;
		
		Если ГруппаМетаданныхМнЧ = "WebСервисы" Тогда
			ГруппаМетаданныхЕдЧ = "WebСервис";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ГруппыКоманд" Тогда
			ГруппаМетаданныхЕдЧ = "ГруппаКоманд";
		ИначеЕсли ГруппаМетаданныхМнЧ = "Документы" Тогда
			ГруппаМетаданныхЕдЧ = "Документ";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ЖурналыДокументов" Тогда
			ГруппаМетаданныхЕдЧ = "ЖурналДокументов";
		ИначеЕсли ГруппаМетаданныхМнЧ = "Константы" Тогда
			ГруппаМетаданныхЕдЧ = "Константа";
		ИначеЕсли ГруппаМетаданныхМнЧ = "Обработки" Тогда
			ГруппаМетаданныхЕдЧ = "Обработка";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеКартинки" Тогда
			ГруппаМетаданныхЕдЧ = "ОбщаяКартинка";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеКоманды" Тогда
			ГруппаМетаданныхЕдЧ = "ОбщаяКоманда";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеМакеты" Тогда
			ГруппаМетаданныхЕдЧ = "ОбщийМакет";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеМодули" Тогда
			ГруппаМетаданныхЕдЧ = "ОбщийМодуль";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ОбщиеФормы" Тогда
			ГруппаМетаданныхЕдЧ = "ОбщаяФорма";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ОпределяемыеТипы" Тогда
			ГруппаМетаданныхЕдЧ = "ОпределяемыйТип";
		ИначеЕсли ГруппаМетаданныхМнЧ = "Отчеты" Тогда
			ГруппаМетаданныхЕдЧ = "Отчет";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ПараметрыСеанса" Тогда
			ГруппаМетаданныхЕдЧ = "ПараметрСеанса";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ПараметрыФункциональныхОпций" Тогда
			ГруппаМетаданныхЕдЧ = "ПараметрФункциональныхОпций"; 
		ИначеЕсли ГруппаМетаданныхМнЧ = "Перечисления" Тогда
			ГруппаМетаданныхЕдЧ = "Перечисление";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ПланыВидовХарактеристик" Тогда
			ГруппаМетаданныхЕдЧ = "ПланВидовХарактеристик";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ПланыОбмена" Тогда
			ГруппаМетаданныхЕдЧ = "ПланОбмена";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ПланыСчетов" Тогда
			ГруппаМетаданныхЕдЧ = "ПланСчетов";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ПодпискиНаСобытия" Тогда
			ГруппаМетаданныхЕдЧ = "ПодпискаНаСобытие";
		ИначеЕсли ГруппаМетаданныхМнЧ = "Подсистемы" Тогда
			ГруппаМетаданныхЕдЧ = "Подсистема";
		ИначеЕсли ГруппаМетаданныхМнЧ = "РегистрыБухгалтерии" Тогда
			ГруппаМетаданныхЕдЧ = "РегистрБухгалтерии";
		ИначеЕсли ГруппаМетаданныхМнЧ = "РегистрыНакопления" Тогда
			ГруппаМетаданныхЕдЧ = "РегистрНакопления";
		ИначеЕсли ГруппаМетаданныхМнЧ = "РегистрыСведений" Тогда
			ГруппаМетаданныхЕдЧ = "РегистрСведений";
		ИначеЕсли ГруппаМетаданныхМнЧ = "Роли" Тогда
			ГруппаМетаданныхЕдЧ = "Роль";
		ИначеЕсли ГруппаМетаданныхМнЧ = "Справочники" Тогда
			ГруппаМетаданныхЕдЧ = "Справочник";
		ИначеЕсли ГруппаМетаданныхМнЧ = "ФункциональныеОпции" Тогда
			ГруппаМетаданныхЕдЧ = "ФункциональнаяОпция";  
		ИначеЕсли ГруппаМетаданныхМнЧ = "ЭлементыСтиля" Тогда
			ГруппаМетаданныхЕдЧ = "ЭлементСтиля";
		ИначеЕсли ГруппаМетаданныхМнЧ = "Языки" Тогда
			ГруппаМетаданныхЕдЧ = "Язык";
		КонецЕсли;	 
		
Возврат ГруппаМетаданныхЕдЧ;

КонецФункции

&НаКлиенте
Процедура Загрузить(Команда)
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(ПутьКФайлу) Тогда 
		АдресСравненияФайлов = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу));
		ЗагрузитьНаСервере(АдресСравненияФайлов, Организация, КонфигурацияИсточник, КонфигурацияПриемник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытия.Каталог = ПутьКФайлу;
	ДиалогОткрытия.Заголовок = "Укажите файл сравнения"; 
	
	Параметр = "";
	Оповещение = Новый ОписаниеОповещения("ВыборВнешнегоФайла_Завершение", ЭтаФорма, Параметр );
	ДиалогОткрытия.Показать(Оповещение); 

КонецПроцедуры

&НаКлиенте
Процедура ВыборВнешнегоФайла_Завершение(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		ПутьКФайлу = Результат[0];
	КонецЕсли;
	
КонецПроцедуры

