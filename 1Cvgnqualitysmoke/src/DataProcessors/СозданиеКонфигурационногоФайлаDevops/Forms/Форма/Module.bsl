
&НаКлиенте
Процедура Сформировать(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.КаталогВыгрузки) Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не указан каталог выгрузки'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,"Объект.КаталогВыгрузки");
		Возврат;
	КонецЕсли;
	
	ЗаписатьФайлParams();
	ЗаписатьФайл0FillParams();
	
КонецПроцедуры
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТекстИнструкции = ОбработкаОбъект.ПолучитьМакет("Макет").ПолучитьТекст();
	Объект.ПортДляПодключенияККлиенту = 1538;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ГруппаПараметрыЭлектроннойПочты.Видимость = Объект.ОтправлятьРезультатПроведенияДымовыхТестовПоEMail;
КонецПроцедуры

&НаКлиенте
Процедура ПапкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выберите каталог для выгрузки данных'");
	ДиалогВыбораФайла.Каталог = Объект.КаталогВыгрузки;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	
	Оповещение = Новый ОписаниеОповещения("КаталогДляВыгрузкиРасшифровкиДекларацийВыбора", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(Оповещение);
	
КонецПроцедуры  

&НаКлиенте
Процедура КаталогДляВыгрузкиРасшифровкиДекларацийВыбора(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогВыгрузки = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеСервернойВременнойБазыПриИзменении(Элемент)

	Элементы.ГруппаДанныеБазы.Видимость = Объект.ИспользованиеСервернойВременнойБазы;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправлятьРезультатДымовыхТестовПоEMailПриИзменении(Элемент)
	Элементы.ГруппаПараметрыЭлектроннойПочты.Видимость = Объект.ОтправлятьРезультатПроведенияДымовыхТестовПоEMail;
КонецПроцедуры

&НаКлиенте
Функция ЗаписатьФайлParams()
	
	ИмяФайла = "params";
	ПутьКФайлу = СтрШаблон(НСтр("ru = '%1\%2'"), Объект.КаталогВыгрузки, ИмяФайла);
	
	Params = Новый Массив;
	ШаблонСтроки = НСтр("ru = 'FileName=./%1, NameVar=%2, ValueVar=%3'");
	
	ДобавитьСтрокуВParams(Params, "hosts", ШаблонСтроки, "IPServer1C", Объект.IPСервера1С);
	ДобавитьСтрокуВParams(Params, "hosts", ШаблонСтроки, "NameServer1C", Объект.ИмяСервера1С);
	ДобавитьСтрокуВParams(Params, "hosts", ШаблонСтроки, "IPStorage1C", Объект.IPХранилища1С);
	ДобавитьСтрокуВParams(Params, "hosts", ШаблонСтроки, "NameStorage1C", Объект.ИмяХранилища1С);
	
	ДобавитьСтрокуВParams(Params, ".netrc", ШаблонСтроки, "IPServerDevops", Объект.ipСервера);
	
	ДобавитьСтрокуВParams(Params, "3-create-gitsync", ШаблонСтроки, "NameDocker", Объект.ВерсияМодуляТестирования);
	
	ДобавитьСтрокуВParams(Params, "4-exec-init-gitsync", ШаблонСтроки, "PathBase", Объект.ИмяСервера1С + "/" + Объект.ИмяБазы1С);
	ДобавитьСтрокуВParams(Params, "4-exec-init-gitsync", ШаблонСтроки, "StorageUser", Объект.ПользовательХранилища);
	ДобавитьСтрокуВParams(Params, "4-exec-init-gitsync", ШаблонСтроки, "StoragePassword", Объект.ПарольХранилища);
	ДобавитьСтрокуВParams(Params, "4-exec-init-gitsync", ШаблонСтроки, "PathStorage", Объект.ПутьКХранилищу1С);
	
	ДобавитьСтрокуВParams(Params, "5-create-sonarscaner", ШаблонСтроки, "IPServerDevops", Объект.ipСервера);
	
	ДобавитьСтрокуВParams(Params, "sonarqube-conf/sonar.properties", ШаблонСтроки, "IPServerDevops", Объект.ipСервера);
	
	ДобавитьСтрокуВParams(Params, "jenkins_home/jobs/Sync gitsync/config.xml", ШаблонСтроки, "PathBase", Объект.ИмяСервера1С + "/" + Объект.ИмяБазы1С);
	ДобавитьСтрокуВParams(Params, "jenkins_home/jobs/Sync gitsync/config.xml", ШаблонСтроки, "StorageUser", Объект.ПользовательХранилища);
	ДобавитьСтрокуВParams(Params, "jenkins_home/jobs/Sync gitsync/config.xml", ШаблонСтроки, "StoragePassword", Объект.ПарольХранилища);
	ДобавитьСтрокуВParams(Params, "jenkins_home/jobs/Sync gitsync/config.xml", ШаблонСтроки, "PathStorage", Объект.ПутьКХранилищу1С);
	
	ДобавитьСтрокуВParams(Params, "jenkins_home/jobs/Git remote/config.xml", ШаблонСтроки, "IPServerDevops", Объект.ipСервера);
	
	ДобавитьСтрокуВParams(Params, "unittest/tools/json/vrunner.json", ШаблонСтроки, "PathBaseSmoke", Объект.ИмяСервера1С + "/" + Объект.ИмяБазы1СДляДымовыхТестов);
	ДобавитьСтрокуВParams(Params, "unittest/tools/json/vrunner.json", ШаблонСтроки, "PathStorage", Объект.ПутьКХранилищу1С);
	ДобавитьСтрокуВParams(Params, "unittest/tools/json/vrunner.json", ШаблонСтроки, "DBUser", Объект.ИмяПользователяИБДляДымовыхТестов);
	ДобавитьСтрокуВParams(Params, "unittest/tools/json/vrunner.json", ШаблонСтроки, "DBPassword", Объект.ПарольПользователяИБДляДымовыхТестов);
	ДобавитьСтрокуВParams(Params, "unittest/tools/json/vrunner.json", ШаблонСтроки, "PlatformNumber", СтрЗаменить(Объект.Платформа1С, "_", "."));
	ДобавитьСтрокуВParams(Params, "unittest/tools/json/vrunner.json", ШаблонСтроки, "StorageUserSmoke", Объект.ПользовательХранилищаИБДляДымовыхТестов);
	ДобавитьСтрокуВParams(Params, "unittest/tools/json/vrunner.json", ШаблонСтроки, "StoragePasswordSmoke", Объект.ПарольХранилищаИБДляДымовыхТестов);
	ДобавитьСтрокуВParams(Params, "unittest/tools/json/vrunner.json", ШаблонСтроки, "UserPassTestClient", 
		Объект.ИмяПользователяИБДляДымовыхТестов + ":" + Объект.ПарольПользователяИБДляДымовыхТестов + ":" + Формат(Объект.ПортДляПодключенияККлиенту, "ЧГ=0"));
		
	Если Объект.ОтправлятьРезультатПроведенияДымовыхТестовПоEMail Тогда
			
		ДобавитьСтрокуВParams(Params, "unittest/script_smoke_obrabotka/send_email_smoke_report.os", ШаблонСтроки, "AdressSMTP", Объект.AdressSMTP);
		ДобавитьСтрокуВParams(Params, "unittest/script_smoke_obrabotka/send_email_smoke_report.os", ШаблонСтроки, "AdressPOP3", Объект.AdressPOP3);
		ДобавитьСтрокуВParams(Params, "unittest/script_smoke_obrabotka/send_email_smoke_report.os", ШаблонСтроки, "SenderEmail", Объект.SenderEmail);
		ДобавитьСтрокуВParams(Params, "unittest/script_smoke_obrabotka/send_email_smoke_report.os", ШаблонСтроки, "UserPassword", Объект.UserPassword);
		ДобавитьСтрокуВParams(Params, "unittest/script_smoke_obrabotka/send_email_smoke_report.os", ШаблонСтроки, "RecieverEmail", Объект.RecieverEmail);
		
	КонецЕсли;
	
	Params.Добавить("");
		
	ТекстParams = СтрСоединить(Params, Символы.ПС);
	
	ТекстовыйДокумент = Новый ЗаписьТекста(ПутьКФайлу, , Символы.ПС, Ложь, Символы.ПС);
	ТекстовыйДокумент.Записать(ТекстParams);
	
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Сформирован файл: %1'"), ПутьКФайлу);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецФункции

&НаКлиенте
Функция ДобавитьСтрокуВParams(Params, ИмяФайла, ШаблонСтроки, ИмяПараметра, ЗначениеПараметра)
	
	Params.Добавить(СтрШаблон(ШаблонСтроки, ИмяФайла, СокрЛП(ИмяПараметра), СокрЛП(ЗначениеПараметра)));
	
КонецФункции
									   
&НаКлиенте
Функция ЗаписатьФайл0FillParams()
	
	ИмяФайла = "0-fill-params";
	ПутьКФайлу = СтрШаблон(НСтр("ru = '%1\%2'"), Объект.КаталогВыгрузки, ИмяФайла);
	
	ДвоичныеДанные0FillParams = ДвоичныеДанные0FillParams(ПутьКФайлу);
	ДвоичныеДанные0FillParams.Записать(ПутьКФайлу);
	
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Сформирован файл: %1'"), ПутьКФайлу);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецФункции

&НаСервере
Функция ДвоичныеДанные0FillParams(ПутьКФайлу)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.ПолучитьМакет("Файл0FillParams");
	
КонецФункции






